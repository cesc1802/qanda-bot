name: Deploy Application
on:
  workflow_call:
    inputs:
      username:
        required: false
        type: string
    secrets:
      GH_TOKEN:
        description: 'github token use to authentication'
        required: true
      TELEGRAM_CHAT_ID:
        description: 'telegram chat id'
        required: true
      TELEGRAM_BOT_TOKEN:
        description: 'telegram chat token'
        required: true
      SSH_HOST_DEV:
        required: true
      SSH_USERNAME_DEV:
        required: true
      SSH_PRIVATE_KEY_DEV:
        required: true
      SSH_PORT_DEV:
        required: true

jobs:
  deploy-application:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out the code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GH_TOKEN}}
      
      - name: Create .env file
        run: |
          cat > .env << EOF
          BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          EXAM_GROUP_ID=${{ secrets.EXAM_GROUP_ID }}
          ANNOUNCEMENTS_TOPIC_ID=${{ secrets.ANNOUNCEMENTS_TOPIC_ID }}
          STUDENT_PRESENTATIONS_TOPIC_ID=${{ secrets.STUDENT_PRESENTATIONS_TOPIC_ID }}
          QUESTION_AND_ANSWER_TOPIC_ID=${{ secrets.QUESTION_AND_ANSWER_TOPIC_ID }}
          SHEET_ID=${{ secrets.SHEET_ID }}
          GOOGLE_SHEET_CREDS_BASE64=${{ secrets.GOOGLE_SHEET_CREDS_BASE64 }}
          EOF
          


      - name: Extract Version
        id: version_step
        run: |
          echo "version=${GITHUB_REF#$"refs/tags/"}" >> $GITHUB_OUTPUT
          echo "version_tag=ghcr.io/$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/"}" >> $GITHUB_OUTPUT

      - name: Prepare Registry Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Deploy using Docker Context
        run: |
          docker context create remote-server --docker "host=ssh://${{secrets.SSH_USERNAME_DEV}}@${{secrets.SSH_HOST_DEV}}"
          docker --context remote-server pull ${{ env.VERSION_TAG }}

      - name: Send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          disable_notification: true
          message: |
            ${{ github.actor }} Built Docker:
            Status: ${{ job.status }}
            Docker Image Version: ${{ steps.version_step.outputs.version }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}